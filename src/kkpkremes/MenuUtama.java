

package kkpkremes;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;


public class MenuUtama extends javax.swing.JFrame {
    JInternalFrame fServer,fPelanggan,fKue,fInbox,fBroadcast,fPesan,foutbox,fKomplain;
    /** Creates new form MenuUtama */
    int waktumulai =0;
    
    public MenuUtama() {
       initComponents();
       getContentPane().add(deskPane,java.awt.BorderLayout.CENTER);
       setMenu();

        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pnlStatusBar = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        MenuBar = new javax.swing.JMenuBar();
        mnMaster = new javax.swing.JMenu();
        miMasterPelanggan = new javax.swing.JMenuItem();
        miMasterKue = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        mnSMS = new javax.swing.JMenu();
        mSMSServer = new javax.swing.JMenuItem();
        mSMSBroadcast = new javax.swing.JMenuItem();
        mSMSInbox = new javax.swing.JMenuItem();
        mSMSOutbox = new javax.swing.JMenuItem();
        mSMSKomplain = new javax.swing.JMenuItem();
        mnAbout = new javax.swing.JMenu();
        miAbout = new javax.swing.JMenuItem();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SMS Gateway Pemesanan Kue");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlStatusBar.setPreferredSize(new java.awt.Dimension(100, 30));
        pnlStatusBar.setLayout(null);
        pnlStatusBar.add(jPanel5);
        jPanel5.setBounds(0, -120, 870, 110);
        pnlStatusBar.add(jPanel6);
        jPanel6.setBounds(0, -40, 870, 40);

        getContentPane().add(pnlStatusBar, java.awt.BorderLayout.SOUTH);

        mnMaster.setText("Master");

        miMasterPelanggan.setText("Master Pelanggan");
        miMasterPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMasterPelangganActionPerformed(evt);
            }
        });
        mnMaster.add(miMasterPelanggan);

        miMasterKue.setText("Master Kue");
        miMasterKue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miMasterKueActionPerformed(evt);
            }
        });
        mnMaster.add(miMasterKue);

        MenuBar.add(mnMaster);

        jMenu1.setText("Transaksi");

        jMenuItem1.setText("Pesan");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        MenuBar.add(jMenu1);

        mnSMS.setText("Server");

        mSMSServer.setText("SMSServer");
        mSMSServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSMSServerActionPerformed(evt);
            }
        });
        mnSMS.add(mSMSServer);

        mSMSBroadcast.setText("SMSBroadcast");
        mSMSBroadcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSMSBroadcastActionPerformed(evt);
            }
        });
        mnSMS.add(mSMSBroadcast);

        mSMSInbox.setText("SMSInbox");
        mSMSInbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSMSInboxActionPerformed(evt);
            }
        });
        mnSMS.add(mSMSInbox);

        mSMSOutbox.setText("SMSOutbox");
        mSMSOutbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSMSOutboxActionPerformed(evt);
            }
        });
        mnSMS.add(mSMSOutbox);

        mSMSKomplain.setText("SMSKomplain");
        mSMSKomplain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSMSKomplainActionPerformed(evt);
            }
        });
        mnSMS.add(mSMSKomplain);

        MenuBar.add(mnSMS);

        mnAbout.setText("About");

        miAbout.setText("About");
        miAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAboutActionPerformed(evt);
            }
        });
        mnAbout.add(miAbout);

        MenuBar.add(mnAbout);
        mnAbout.getAccessibleContext().setAccessibleDescription("");

        setJMenuBar(MenuBar);

        setSize(new java.awt.Dimension(1044, 772));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    
        
    private void getFormInbox(){
        if(!deskPane.isAncestorOf(fInbox)) {
            fInbox = new SMSInbox(this);
            deskPane.add(fInbox);
            try{
                fInbox.setVisible(true);
                fInbox.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fInbox.getSize();
                fInbox.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fInbox.setSelected(true);
            } catch (Exception e2) {System.err.println("form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
    
    private void getFormKomplain(){
        if(!deskPane.isAncestorOf(fKomplain)) {
            fKomplain = new SMSKomplain(this);
            deskPane.add(fKomplain);
            try{
                fKomplain.setVisible(true);
                fKomplain.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fKomplain.getSize();
                fKomplain.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fKomplain.setSelected(true);
            } catch (Exception e2) {System.err.println("form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
    
    private void getFormPesan(){
        if(!deskPane.isAncestorOf(fPesan)) {
            fPesan = new Pesan(this);
            deskPane.add(fPesan);
            try{
                fPesan.setVisible(true);
                fPesan.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fPesan.getSize();
                fPesan.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fPesan.setSelected(true);
            } catch (Exception e2) {System.err.println("form Inbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
       
    private void getFormOutbox(){
        if(!deskPane.isAncestorOf(foutbox)) {
            foutbox = new SMSOutbox(this);
            deskPane.add(foutbox);
            try{
                foutbox.setVisible(true);
                foutbox.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = foutbox.getSize();
                foutbox.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Outbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                foutbox.setSelected(true);
            } catch (Exception e2) {System.err.println("Form Outbox Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
     
    private void getFormKue(){
        if(!deskPane.isAncestorOf(fKue)) {
            fKue = new DataKue(this);
            deskPane.add(fKue);
            try{
                fKue.setVisible(true);
                fKue.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fKue.getSize();
                fKue.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.err.println("Form Admin Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        } else {
            try {
                fKue.setSelected(true);
            } catch (Exception e2) {System.err.println("Form Admin Added To DeskPane, ERROR @ : "+e2.getMessage()); }
        }
    }
     
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(exitApp()){    
            if(statusKoneksi){ // jika koneksi masih terbuka
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
            }else
                System.exit(0);
        }else
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if(exitApp()){    
            if(statusKoneksi){ // jika koneksi masih terbuka
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
            }else
                System.exit(0);
        }else
            this.setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosed
    

    
    private void miMasterPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMasterPelangganActionPerformed
        getFormPelanggan();
    }//GEN-LAST:event_miMasterPelangganActionPerformed
 
    private void getFormPelanggan(){
        if(!deskPane.isAncestorOf(fPelanggan)) {
            fPelanggan = new DataPelanggan(this);
            deskPane.add(fPelanggan);
            try{
                fPelanggan.setVisible(true);
                fPelanggan.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fPelanggan.getSize();
                fPelanggan.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form Siswa Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }            
        } else {
            try {
                fPelanggan.setSelected(true);
            } catch (Exception e2) {System.out.println("Form Siswa Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }           
        }
    }
    
    private void getFormBroadcast(){
        if(!deskPane.isAncestorOf(fBroadcast)) {
            fBroadcast = new SMSBroadcast(this);
            deskPane.add(fBroadcast);
            try{
                fBroadcast.setVisible(true);
                fBroadcast.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fBroadcast.getSize();
                fBroadcast.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form Siswa Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }            
        } else {
            try {
                fBroadcast.setSelected(true);
            } catch (Exception e2) {System.out.println("Form Siswa Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }           
        }
    }

    private void getFormServer(){
        if(!deskPane.isAncestorOf(fServer)) {
            fServer = new SMSServer(this);
            deskPane.add(fServer);
            try{
                fServer.setVisible(true);
                fServer.setSelected(true);
                Dimension scrSize = Toolkit.getDefaultToolkit().getScreenSize(),
                          frmSize = fServer.getSize();
                fServer.setLocation((scrSize.width - frmSize.width)/2,(scrSize.height - (frmSize.height + 100))/2);
            } catch (Exception e2) {System.out.println("Form Siswa Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }            
        } else {
            try {
                fServer.setSelected(true);
            } catch (Exception e2) {System.out.println("Form Siswa Failed Added To DeskPane, ERROR @ : "+e2.getMessage()); }           
        }
    }
    
    private void miMasterKueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miMasterKueActionPerformed
       getFormKue();
    }//GEN-LAST:event_miMasterKueActionPerformed

    private void mSMSServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSMSServerActionPerformed
        getFormServer();
    }//GEN-LAST:event_mSMSServerActionPerformed

    private void mSMSBroadcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSMSBroadcastActionPerformed
        getFormBroadcast();
    }//GEN-LAST:event_mSMSBroadcastActionPerformed

    private void mSMSInboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSMSInboxActionPerformed
        getFormInbox();
    }//GEN-LAST:event_mSMSInboxActionPerformed

    private void mSMSOutboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSMSOutboxActionPerformed
        getFormOutbox();
    }//GEN-LAST:event_mSMSOutboxActionPerformed

    private void mSMSKomplainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSMSKomplainActionPerformed
        getFormKomplain();
    }//GEN-LAST:event_mSMSKomplainActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        getFormPesan();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void miAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAboutActionPerformed
        about();
    }//GEN-LAST:event_miAboutActionPerformed

     private void about(){
         String teks1 = "<html> <head> <body align='center'> <font face='Arial' color='RED'>" +
                     "APLIKASI SMS GATEWAY UNTUK<br>" +
                     "PEMESANAN KUE PADA<br>" +
                     "TOKO KUE KREMEZ MM JAYA" +
                     "</font></body></head></html>";
        
        javax.swing.JLabel teks = new javax.swing.JLabel(teks1);
        javax.swing.JPanel pnl = new javax.swing.JPanel();
        pnl.setSize(150,300);
        pnl.add(teks);
        JOptionPane.showMessageDialog(this,pnl,"HELP", JOptionPane.INFORMATION_MESSAGE);
    }
    
    public void setCtrlBukaKoneksi() {
        statusKoneksi = true;
    }
    
    public void setCtrlTutupKoneksi() {
        statusKoneksi = false;
    }
    
    public boolean getStatusKoneksi(){
        return statusKoneksi;
    }

 
   
    public void setMenu(){
//        miLogin.setEnabled(true);
//        miLogout.setEnabled(false);
//        miMasterPelanggan.setEnabled(false);
//        miMasterAdmin.setEnabled(false);
//        miSMSServer.setEnabled(false);
//        miSMSInbox.setEnabled(false);
//        miSMSbroadcast.setEnabled(false);
//        miMasterAbsensi.setEnabled(false);
        miMasterKue.setEnabled(true);

    }
    
    public void setMenu2(){
//        miLogin.setEnabled(false);
//        miLogout.setEnabled(true);
//        miMasterPelanggan.setEnabled(true);
//        miMasterAdmin.setEnabled(true);
//        miSMSServer.setEnabled(true);
//        miSMSInbox.setEnabled(true);
//        miSMSbroadcast.setEnabled(true);
//        miMasterAbsensi.setEnabled(true);
//        miMasterKue.setEnabled(true);
//        miPoinPrilaku.setEnabled(true);
//        miDetilJadwal.setEnabled(true);
//        miEntryNilai.setEnabled(true);
    }
    
    public void setMenu3(){
//        miLogin.setEnabled(false);
//        miLogout.setEnabled(true);
//        miMasterPelanggan.setEnabled(false);
//        miMasterAdmin.setEnabled(true);
//        miSMSServer.setEnabled(true);
//        miSMSInbox.setEnabled(true);
//        miSMSbroadcast.setEnabled(true);

    }
    
    private boolean exitApp() {
        Object[] obj = { "Ya", "Tidak" };
        int ask = JOptionPane.showOptionDialog(null, " Apakah Anda Ingin Mengakhiri Aplikasi ini ?",
                "KONFIRMASI", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, obj, obj[1]);
        if(ask == 0) {
            return true;
        }
        return false;
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JMenuItem mSMSBroadcast;
    private javax.swing.JMenuItem mSMSInbox;
    private javax.swing.JMenuItem mSMSKomplain;
    private javax.swing.JMenuItem mSMSOutbox;
    private javax.swing.JMenuItem mSMSServer;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miMasterKue;
    private javax.swing.JMenuItem miMasterPelanggan;
    private javax.swing.JMenu mnAbout;
    private javax.swing.JMenu mnMaster;
    private javax.swing.JMenu mnSMS;
    private javax.swing.JPanel pnlStatusBar;
    // End of variables declaration//GEN-END:variables
    private boolean statusKoneksi = false, statBar = false;
    private String JUDUL_STATUS_BAR = "SMS Gateway Untuk Pemesanan Kue pada Toko Kue Kremez MM Jaya";
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuUtama().setVisible(true);
            }
        });
    }
    private javax.swing.JDesktopPane deskPane=new javax.swing.JDesktopPane() {
        };
}
